function [y1] = f(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-May-2021 22:27:41.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 6xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [5.400593;0.291664;10.930769;1.069891;3.455914;0];
  x1_step1_gain = [0.00336360913996001;0.00286739972620003;0.00339518666864473;0.00283202094202456;0.00335264408270406;0.00500677262377739];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-1.596003249204303;6.8795113566824888;0.25874345409016647;1.1696431503555569;-0.89722118285617425;1.4297599747204051;-0.5985688528025449;4.3822142907989985;0.2080902896413333;-5.7584452970407947];
  IW1_1 = [-0.33265375870485886 -2.0034121317940636 0.37048824787633117 -0.49880854157764282 0.73241659767999212 -0.14169494647931252;-2.9415652501917968 -2.5074887866304034 0.011586123439336404 9.2541500218137287 0.012723548165051543 -1.2759276662447223;0.44561802586926891 4.8495057079400574 -0.044516689381496104 -1.8996380433884896 -1.1419384242440094 0.73650756333407397;2.6023790657572023 5.0158468869909445 -4.5834332340994202 -1.4056853969416601 2.2926883689362394 -6.7135885377532993;4.3808032311771266 -5.4707598779191038 -4.4847762729953633 1.8430725114361282 -1.7772689943485096 4.7140811370091846;1.2313664888057425 0.74510338377170782 0.41883593953342502 0.32805879504895497 0.22251351734059127 -0.23513660367939943;-0.00012707099531608645 -0.12359885921837929 0.74934396597532293 1.0002073882234186 -0.87202281423078687 1.7986513581302916;-0.77580477079452792 4.5634637366074351 1.0926757453153964 -0.83253933273535496 -1.296974303448458 1.1470185496282828;0.63964265722828517 0.45862156889891059 0.93531878370447064 -0.18450294647578605 0.77275091322713141 0.48382928741498382;-2.2194319277328285 0.47720920639249526 -0.54742494749213355 -5.0565986819798487 0.28862686722730463 0.049648380080188084];
  
  % Layer 2
  b2 = [0.0129672580549988;1.1303278251341755];
  LW2_1 = [-1.5517635800264462 -0.46761911602445427 -0.91832479569896985 -0.12482024725668436 -0.30084389579932291 -1.6037810416346581 -0.50796475803792773 -0.66526384680221629 1.1884496736944625 -0.93913560548534314;0.050748302274505601 0.012093183273568835 0.061406395061096901 0.042237087282765512 0.10739310506962289 -0.11280687272713052 0.22428464181377986 -0.21178388697266184 0.14400486877202842 0.10653860130704808];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [0.588235294117647;1];
  y1_step1_xoffset = [-1.7;-1];
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
