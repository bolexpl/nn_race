function [y1] = gdNet20(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 08-Jul-2021 23:02:28.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx12 matrix, input #1
% and returns:
%   y = Qx2 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.01047601;-0.00892852428571429;-0.00584696857142857;0.00162097714285714;0.00376416857142857;0.0161386685714286;0.0121159228571429;0.00158425142857143;-0.00549906428571429;-0.00865804571428571;-0.01015141;0];
x1_step1.gain = [2.30515964525549;2.3092784762164;2.31752442544108;2.33775435410255;2.34362543473875;2.37810944009363;2.36678846419323;2.33765400364391;2.31845908518788;2.309999901132;2.30602239144118;2.0044345558895];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.2268646279923967057;-2.4488557062940459197;4.8189884397998428156;-3.4974180556399794284;6.3253302755107929656;-4.0174506829573815025;0.68549664245951924535;-2.9806667540732219024;1.2404923147071647005;0.76719066917884615187;1.8307430234238346589;-0.27272334513849849635;1.1184728369674981074;0.30424751442478803476;0.90959749580896331889;-0.58336840237038589674;-3.4071815950256407746;2.1260041492086907411;1.2156098869704521359;-2.2086961383672210069];
IW1_1 = [-1.5018347180489435289 1.9912414049296098817 -0.62719970047445805506 1.4733367948379767487 0.85312294484869544142 -1.4734475449632067345 -0.86868559148463986297 0.0099676630961569971656 0.15003580872673122348 -0.25586901819337315445 0.56889720691773759675 0.11686996021493703535;-0.82414268824970127181 -0.041660349136573238127 -0.01941593956528599868 -1.2920006213739749779 1.1241493034424336894 -1.2799543230770777935 0.53166610271910630381 -0.59756421138573723173 0.46771186135373099546 -1.4397198536444659744 0.029528044937097326639 -0.79368229331296069606;-1.2214906102719380598 -1.2570470646766702671 0.50887357306456082462 -0.35224487178399299658 3.7719353752979558614 -2.4228183616766121311 1.1609226121761724304 -3.6681585571196886342 1.5289241650860954103 0.17645147717964668188 0.053987329059121895447 0.9329676113497524792;-1.1804390415432577388 0.15587746466990476391 2.3422813335081227315 1.2248218982325072002 -4.1560817506845415537 0.91918115123095978092 -1.4652353282188479433 1.2649723027009782683 -0.7068233860254673484 -1.3822066364357896706 -1.3060720321701719815 -2.9033105276822217533;0.26485331645221071861 1.7411200808650109106 -0.46560828855493335832 1.7517229356239198967 0.94841280380482462231 -0.82927279290638744591 -0.6766968842219638347 4.0562673810214757708 -1.1005033816578553285 1.5316082953607919048 1.357956994366888992 0.42874180117782756394;3.0285506523754111008 -5.1530631262642367929 -1.96003569523239074 0.61833594310039974307 -0.77666415642554698096 0.28278985552205149201 -1.0754115326022242183 0.76112672677834380952 0.017205546554819199645 -0.32981072812885892098 -1.0762008942592211636 0.35519727929402872268;-0.47837519879833129144 6.4578697466356489443 -0.7941287993905187248 0.99195741264883219301 -0.37764405313832638544 -1.355760788965715502 0.65409231586248961499 0.44003890566575959431 0.24729466073225775391 0.0072952519445188511449 -0.90190212852418805145 1.4273300630458474192;-1.7597041934321653311 0.30030161604580840606 -1.0523901858071651461 0.60766891762531705101 -1.1199205621001326882 -0.73552339983363046461 -0.42293561847895738692 0.61889952449507079635 0.040974396737388785183 -0.49066934846323434494 -0.28316180514105782073 -0.078764816240168789019;-0.67408693862722202095 -3.0189302992966564609 -3.0740776680366312945 5.6100481098636487687 -2.746958854387400617 1.5390686190421369872 1.3540987212318280619 0.7252195808915500308 1.2707022054331640337 -1.3868241916469881136 2.8134041715620643487 -0.42723320132874326172;0.40365142066867182313 -2.3794424825273443602 1.7563790813223432163 -0.90548435781251812582 2.201774948920522057 -0.74632378583028446961 0.1655988067030490507 -0.037783857998789888155 0.93201457616222294078 -1.2026147039163150865 -2.0396055834930915118 -0.82200056306369873038;1.4009776010036520955 0.54359014977546149527 0.39267044979104426261 -0.77846453764169165623 -0.3126036818660176686 0.94575337752965404903 -0.86499974295591475215 0.063233321510303405755 -0.45692699684230203561 1.351178217039340268 0.82488155762194359522 0.57751099438586717127;-2.3502148941687313055 3.6991923213122857028 1.828750146680200972 -0.96068527626380750828 0.68164153495562573859 -0.14783685232691545774 -1.4656150957650828648 -0.026512080121526372667 -0.19491732725041854835 0.35476838970419960484 -1.4746504427246338587 -0.3706820206016054331;2.7673067606213628267 2.5525593695356665336 -2.8372194322077515238 -1.1261263105792578276 1.4896936412543568817 -1.239875254580093733 -1.9164880412956217803 -0.6629144152439736537 -0.72323187980579062284 -1.5533842578927841149 -0.1175979842925428398 -1.1788187475206584054;-0.66363979609009338123 1.4928908277179246955 -2.5911505560751124655 -0.46789877816140229561 5.002632094732433643 -4.0193231105182185559 6.9032771827845778034 -2.2494321219891100228 1.8508789046401687983 1.1974939214777211571 0.1202999984790901894 3.9572342114285441461;0.9646107383571168592 -0.94747517200768427426 0.9964935740229836636 0.11862354984828950288 -0.16729611506871272519 -0.12074655617907908978 0.32660160469944193862 0.95719418872601569337 0.75649799061204858752 0.86724131103006596444 0.52371109731560094858 0.49030265033156644749;-1.2781739596640611101 3.2097527188294239231 -2.0836146193853668507 0.39780370469103221165 0.058001652170653186791 -0.72626987734059922364 -1.2874810834230321355 -0.6395940468597177686 -0.99973070594670110367 -1.4356973883281425319 -0.4720323298712553739 -0.77396601725857172571;-0.22241552417222262839 -1.851809029560823161 -0.1172611057499722137 -1.674116348006663868 1.2670443814525691462 -1.8898725686441144589 1.0798381532356113865 -0.76446578213410976144 0.57634477626237246017 -1.6408088775264233483 0.032528324817414765169 -1.6825490498931914285;2.1416992487433259562 -1.4886198250136088994 1.0027156104687533489 1.3320890479995857181 -0.27724652637386365539 -2.080518124034212768 1.3407720259528559392 0.057684712894325862464 1.7523409459958623202 -1.0679587868859168331 -2.5438147941867739199 -1.1252818810923088666;1.975445067359274498 2.4479297826128805227 -1.4987898993449537688 0.1998114057334922089 -0.62250682039566496151 -0.68304079169349518619 -0.11035226736257784663 -0.62759262162730744539 -0.070894668747632658135 -0.28776579532727447619 -0.35627133441678215942 -0.25197505207473536171;-1.1836513316737804491 -0.22217404735374088331 -0.19022957419444158633 0.77844200421550269198 -1.237324672297637429 -0.86981363155758850692 0.12188940496890759979 0.40141302087199681736 0.076708595687708810984 -0.70928296267440626988 -0.25937410959167633839 -0.57025104716599905874];

% Layer 2
b2 = [-3.356176944376934479;0.91071113016890514746];
LW2_1 = [-1.1639979617042115478 -2.98455715393121368 2.3929960059966219887 1.0074442817485007584 1.2624345049230554228 -1.7641572435052736978 -0.85405891342954631806 4.1630533132268920937 -0.74605637736619145883 1.56779536987166912 -1.5630053613806087487 -1.0836026968939493909 -0.92829848944706505609 -0.39848931577662038972 2.0935939956180713573 1.6796548041303507315 2.3080564272224997069 -1.2284981080803161202 1.4693666736249062499 -4.7611935552508821701;0.15684212826440621646 -0.0016609940119978738871 -0.1307985844224454075 0.024685249318596533957 -0.17934948402120198807 0.062590127426041919367 0.015496170375729076407 0.033570275554583695055 0.021596855918008923958 0.083687637763054031903 0.082038005189804447115 0.05034784187194969729 -0.092260873228010464864 0.10557559330024778033 0.011549132662280444175 0.071343557680148730893 -0.069216814640143356496 -0.020737884581900688924 -0.092880646243585718302 -0.0137749623885031168];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;2.2281565458226];
y1_step1.xoffset = [-1;0.102397];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
