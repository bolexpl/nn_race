function [y1] = gdNet(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 05-Jul-2021 19:37:09.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx2 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.00399441333333333;0.00035674;0.009850148;0.00142868533333333;0.004925624;5.4465e-05];
x1_step1.gain = [2.51254517995929;2.12452698805258;2.53116544277983;2.12304223465719;2.51548793467845;2.01783678936984];
x1_step1.ymin = -1;

% Layer 1
b1 = [-5.4559375083646628468;-0.36216346576936853108;0.089287558384329820949;-4.4127711706918830714;-4.0287127280886956271;1.460318467818482624;1.1016896252252152966;0.37352759446282574052;-10.410300063701715345;4.5734233910190713601];
IW1_1 = [0.039787972577061452017 -1.9907003717187505831 -1.1736906719805957344 0.16656225750615485937 0.79473515943785510984 -4.1693778088300241791;-0.13117828637071005105 1.5209192648648386381 1.4653584036515874267 1.2734331399336495938 -0.87521012102510886699 -1.7849307033298089653;1.4996707960989823505 -2.7503906414514833756 2.0400503460241967701 0.33769392907187667507 0.090199784313680586578 0.21245342937180611287;4.1105932469444619315 1.3319273208502433459 6.7122898299974487202 -12.351691590241188123 1.9231234399347973962 1.7525145499530974114;4.0828449970180074047 0.52699115975674570844 0.59660302712033297379 -10.430268593476528238 0.21844728114076633618 0.70782012955216921934;0.68198458837062547744 0.63590371687783298071 0.0055195200683462661284 -0.48617229221650909432 0.29885700861197250777 -2.1445826488167920587;0.77260416047884539203 -13.528589773932019114 6.7435737746604633713 3.4164913281899917941 2.3317048138368035026 -1.1730244648345136138;0.082776090258527307286 -0.80407160152663870178 -1.3977262183017606922 -1.1960538621518270741 0.12838204886999970977 1.3079689563936989227;-10.146601276990136142 6.9304143716789283758 -2.964613170720167723 1.3234067123530974808 3.166753940899019959 -8.1875202283393306857;1.4943582848404148855 -0.088389922284749455894 0.97359394565829149304 -0.18520118360294643423 -0.79105425843064736124 3.7875568599659725777];

% Layer 2
b2 = [-0.40358425997054386825;0.08512814522105913162];
LW2_1 = [-5.15929603587131691 -1.9331339125218114372 -0.65296521794408068917 0.33091929518947865718 -0.3309543736273212744 -0.078489742303226930908 0.59431631633229309308 -1.9553482480146320288 -1.4838548718211865829 -6.2433604429251099432;-0.19844340368691684717 0.20596639585912851489 0.040180195814900593332 0.020918896505315889151 0.02279912230190478048 -0.17892796703463731411 0.0072823785707651937302 0.24016262820587203075 -1.3422483100204833928 -0.85763825384490088855];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
