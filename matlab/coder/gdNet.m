function [y1] = gdNet(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 05-Jul-2021 22:06:53.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx2 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.00399441333333333;0.000374489333333333;0.009850148;0.00142868533333333;0.004925624;5.4465e-05];
x1_step1.gain = [2.51254517995929;2.12456704563575;2.53116544277983;2.12304223465719;2.51548793467845;2.01783678936984];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.3083603998609651953;1.4783481450303916915;2.8434421561742944107;0.3712016691531238588;-3.8445987904179013128;1.8099459135777475893;-0.49765189974052581601;1.1211569143414450433;-0.28819095338083156044;0.75541811673678416206];
IW1_1 = [0.13654716707346703508 -11.993479765528832104 7.2512570744093070019 5.5280961134951569491 4.7337822806622664729 -0.9016134605935787194;0.92049360918147904442 -1.2027696157242835362 -0.91763039428703152556 0.56773036948632182863 1.9406022082418299401 1.0214881632991550386;-2.7493301376487440102 -1.3959870611109559402 0.61575527097072701999 -0.47377054509679616956 -4.5653940640072327994 0.27511187606416687146;-1.53800244072823733 -0.58152886017937877039 -1.6644947645193290953 0.94337727835285223321 0.58371115432934617129 -0.90213421334717047717;2.4737142769208824156 -4.9995900854043355821 0.39991468810166086456 0.6772330859865043351 -0.45852665265129138872 4.9854070016731579784;1.14107781876513803 -1.3413218793658496786 -0.98117071478332329448 1.1999941714972115481 1.9852730894106243031 1.2248245530676240556;5.6514209962013692845 1.9475613940081244468 0.43167262134352069047 -4.4919561607642402024 -2.465269802931329135 0.84304692924990609626;1.2583921805725566401 -2.5087284435653036674 2.7863558299198278867 0.45377165198122321188 1.5248382837680312107 -0.23200254596067282353;6.2285747536440494443 1.376718159904097627 -6.2951987485709564041 2.4361593862879988848 4.2440917771161172922 0.11788253257628363013;-0.3722259143173982654 -0.29364771361462144172 0.90786066065850623552 -0.67067877824504329443 -1.1906199737108229542 -0.16192374457637365159];

% Layer 2
b2 = [-1.2552666383264219352;1.4958228688502268611];
LW2_1 = [0.62848099775332544326 3.3026652737755095579 1.3035917392634337464 -0.61985536855640566145 -0.16745878842744971182 -2.6711646336766805554 -0.39498061670886930319 -0.57944119148444594991 -0.30756635130388298993 -0.98101824326873832138;0.019461569987123856357 1.3928097519886666333 -1.0547450238757938301 -0.14644233184115396096 0.239252938751710581 -1.2555115873244437896 -0.090627112911111154525 -0.085695229452080731725 -0.30991541088929724923 -0.27222704218159393674];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;2.2281565458226];
y1_step1.xoffset = [-1;0.102397];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
