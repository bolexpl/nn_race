function [y1] = gdBiggerNet(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 05-Jul-2021 22:02:17.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx6 matrix, input #1
% and returns:
%   y = Qx2 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.00399441333333333;0.00035674;0.009850148;0.00142868533333333;0.004925624;5.4465e-05];
x1_step1.gain = [2.51254517995929;2.12452698805258;2.53116544277983;2.12304223465719;2.51548793467845;2.01783678936984];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.7600131546402675298;-7.6939544189880333391;3.0366547933105096924;-3.8067794101581111654;-1.0392386452639872374;1.1587736437867439676;1.7171952639659764372;0.19902560689432788332;-1.4793376077110544919;-0.62875801459455094022;-1.6103855429273505884;2.3940168273405273425;0.14349730360793874762;0.45082837760732830112;10.790887786939164172;-1.576654500530768388;-1.6482209067979665118;21.241769326756486436;2.4860365122647514191;8.7798608602033283432];
IW1_1 = [2.3584793586536925147 -3.6279277851297480062 -3.5869602792914339062 -1.587671030720703591 0.12414858294860450783 -1.3297811999505457781;-0.35038663077821585734 -3.9318790800517096073 1.543686689273212842 -5.9717323938757136403 0.87844387828401970797 0.22827438610322800527;-1.1183574860478908697 1.37684569362336795 1.5937870386999486438 0.67109019754249876755 -0.15290889627302189924 0.12715705989935852105;2.1306457003097105662 4.6373507802985649562 1.0273499076092063031 -5.1877943842055422863 2.7214112706041380108 -0.22839820934536611552;0.62822114167532749907 1.4064254290057787156 -1.022566727124992747 0.082730853022752973147 1.7587595678862517623 -0.2815471211712940458;-4.8109747292298310484 0.11583088381330654271 2.6860172722294413106 5.5039172873576651668 -3.6058961307050045875 -0.34805290282971945715;-1.0029574143418917842 3.8732405121687096816 0.13732375142449337879 -4.2367888899429209104 2.9637459863298167839 -3.3196981276504180514;-3.1915965619349919713 2.7638228450656785462 -0.21543745429876767772 -3.1448700348727469667 6.0888723261408896903 1.3845891829267298334;-0.42721142315388915822 3.9830158524229970496 2.0463527977890336729 -3.8014880044803511794 -2.165479997600090023 -0.69568366197953657171;2.3903379383877836339 -3.592765052493024136 1.139921804245207726 -0.10735704507025703447 -0.60116351164749626257 0.69489176610935599054;-2.5703598392230215808 -1.1242327428185030502 -2.704783209710750036 1.7538148902168957388 -0.9293604805413008263 -0.49316790514276420687;-0.5875366803101906843 2.2053516993577129135 1.6960315999960193789 -1.2543030432266872864 0.68544024318234586524 -2.0964417565372541752;-0.0036940505619177527175 -5.2860883850489637226 6.071831004794587372 4.7947465588352926602 0.93928156413002683589 -2.609562475560177397;0.92410317577687517421 -2.7572714297177460807 -0.090250474158295429516 0.053549438188759859725 1.6744063160171451798 0.6167028530238503059;-3.7455903934262004817 0.71546571634725486533 0.15803470942897487883 7.7343536593816768487 4.2325877826103397439 -5.1102422389046058271;-0.89787956962579618114 7.3250150011940826644 2.7817112143478994746 -5.8848266311347874336 -3.5962159172549816866 -0.98410412495475452221;-0.50202382287350266754 -0.98750013632609368042 0.51113576552886552662 -0.21593508213381740202 1.2292021441695779593 -0.081135982514338622629;4.8057364218148972412 10.055019974960423212 2.2072199892143653521 -0.5316936322664768122 -3.4684097890621807814 8.3670981933981583012;5.2111350376733742706 -1.7346502252611393224 -0.49307601402993361805 0.49418960482434837189 -2.0675210965867543145 0.75559161769129068453;4.4051510657778214508 0.47031336244810062475 -0.11229506679115121293 0.57484130837801050706 -0.71633490328405624581 4.7262031054383504269];

% Layer 2
b2 = [-2.8291180263158972608;-0.51941169897384664722];
LW2_1 = [0.36072954602998430484 -0.66475439261337654351 1.9219270284846157182 0.57462060057996489082 -2.6628977519499765769 0.51327892931774055096 0.43507889454549852903 -0.28766790107092149453 1.9953289081931324667 -1.3346837840937388897 -0.48089066233341043466 -0.45314899187747353926 -0.237752815825797853 1.8430107161806505989 -0.23122847255678372069 -1.5626343175032944011 2.5385190004167514921 1.4331920355485154861 1.0231143296461266967 -1.7966254730312671839;0.3872989513858489663 0.087400536640242512676 2.135734003551184923 -0.096924354229635162339 0.21991525118588972632 -0.046040708274651030718 -0.070727799054495957276 0.049131315005722431266 -0.11184714558189359779 0.16293651365442124446 0.0038463139424831523615 -0.11903867280676956597 -0.022477399070386538948 -0.17810503863048898765 -0.041032604555778118272 0.090077774245336472703 0.092372462466608157294 1.2926965613124961063 0.037505892980297515782 -1.3428674999378338306];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
